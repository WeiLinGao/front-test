{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Weili\\\\front_starter\\\\src\\\\components\\\\views\\\\CampusView.js\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampusView = props => {\n  const {\n    campus,\n    deleteCampus,\n    editCampus\n  } = props;\n  const handleDelete = () => {\n    // Call deleteCampus function with the campus ID\n    deleteCampus(campus.id);\n    console.log(\"Campus deleted\");\n    // You might want to navigate to another page after deletion or update the UI\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: campus.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => editCampus(campus.id),\n        children: \"Edit College\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/newstudent`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Enroll New Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), Array.isArray(campus.students) && campus.students.map(student => {\n      let name = `${student.firstname} ${student.lastname}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/student/${student.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, student.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = CampusView;\nCampusView.propTypes = {\n  campus: PropTypes.object.isRequired,\n  // Assuming campus is an object\n  deleteCampus: PropTypes.func.isRequired,\n  editCampus: PropTypes.func.isRequired\n};\nexport default CampusView;\nvar _c;\n$RefreshReg$(_c, \"CampusView\");","map":{"version":3,"names":["Link","PropTypes","jsxDEV","_jsxDEV","CampusView","props","campus","deleteCampus","editCampus","handleDelete","id","console","log","children","name","fileName","_jsxFileName","lineNumber","columnNumber","address","description","onClick","to","Array","isArray","students","map","student","firstname","lastname","_c","propTypes","object","isRequired","func","$RefreshReg$"],"sources":["C:/Users/Weili/front_starter/src/components/views/CampusView.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CampusView = (props) => {\r\n  const { campus, deleteCampus, editCampus } = props;\r\n\r\n  const handleDelete = () => {\r\n    // Call deleteCampus function with the campus ID\r\n    deleteCampus(campus.id);\r\n    console.log(\"Campus deleted\");\r\n    // You might want to navigate to another page after deletion or update the UI\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>{campus.name}</h1>\r\n      <p>{campus.address}</p>\r\n      <p>{campus.description}</p>\r\n\r\n      <div>\r\n        <button onClick={() => editCampus(campus.id)}>Edit College</button>\r\n      </div>\r\n\r\n      <div>\r\n        <button onClick={handleDelete}>Delete</button>\r\n      </div>\r\n\r\n      <Link to={`/newstudent`}>\r\n        <button>Enroll New Student</button>\r\n      </Link>\r\n\r\n      {/* Check if campus.students is an array before mapping */}\r\n      {Array.isArray(campus.students) && campus.students.map((student) => {\r\n        let name = `${student.firstname} ${student.lastname}`;\r\n        return (\r\n          <div key={student.id}>\r\n            <Link to={`/student/${student.id}`}>\r\n              <h2>{name}</h2>\r\n            </Link>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nCampusView.propTypes = {\r\n  campus: PropTypes.object.isRequired, // Assuming campus is an object\r\n  deleteCampus: PropTypes.func.isRequired,\r\n  editCampus: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CampusView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}