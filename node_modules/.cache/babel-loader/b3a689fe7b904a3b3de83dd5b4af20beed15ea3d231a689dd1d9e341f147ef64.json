{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Weili\\\\front_starter\\\\src\\\\components\\\\views\\\\CampusView.js\";\n/*==================================================\r\nCampusView.js\r\n\r\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\r\nIt constructs a React component to display a single campus and its students (if any).\r\n================================================== */\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n// Take in props data to construct the component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampusView = props => {\n  const {\n    campus,\n    deleteCampus,\n    editCampus\n  } = props;\n  const handleDelete = () => {\n    console.log(\"Campus deleted\");\n  };\n\n  // Render a single Campus view with list of its students\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: campus.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: campus.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => editCampus(campus.id),\n        children: \"Edit College\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteCampus(campus.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/newstudent`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Enroll New Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), campus.students.map(student => {\n      let name = student.firstname + \" \" + student.lastname;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/student/${student.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, student.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = CampusView;\nCampusView.propTypes = {\n  Campuses: PropTypes.array.isRequired\n};\nexport default CampusView;\nvar _c;\n$RefreshReg$(_c, \"CampusView\");","map":{"version":3,"names":["Link","PropTypes","jsxDEV","_jsxDEV","CampusView","props","campus","deleteCampus","editCampus","handleDelete","console","log","children","name","fileName","_jsxFileName","lineNumber","columnNumber","address","description","onClick","id","to","students","map","student","firstname","lastname","_c","propTypes","Campuses","array","isRequired","$RefreshReg$"],"sources":["C:/Users/Weili/front_starter/src/components/views/CampusView.js"],"sourcesContent":["/*==================================================\r\nCampusView.js\r\n\r\nThe Views component is responsible for rendering web page with data provided by the corresponding Container component.\r\nIt constructs a React component to display a single campus and its students (if any).\r\n================================================== */\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n// Take in props data to construct the component\r\nconst CampusView = (props) => {\r\n  const {campus,deleteCampus,editCampus} = props;\r\n  const handleDelete = () => {\r\n    console.log(\"Campus deleted\");\r\n  };\r\n  \r\n  // Render a single Campus view with list of its students\r\n  return (\r\n    <div>\r\n      <h1>{campus.name}</h1>\r\n      <p>{campus.address}</p>\r\n      <p>{campus.description}</p>\r\n\r\n      <div>\r\n      <button onClick={() => editCampus(campus.id)}>Edit College</button>\r\n      </div>\r\n\r\n      <div>\r\n      <button onClick={() => deleteCampus(campus.id)}>Delete</button>\r\n      </div>\r\n      <Link to={`/newstudent`}>\r\n        <button>Enroll New Student</button>\r\n      </Link>\r\n\r\n      {campus.students.map( student => {\r\n        let name = student.firstname + \" \" + student.lastname;\r\n        return (\r\n          <div key={student.id}>\r\n            <Link to={`/student/${student.id}`}>\r\n              <h2>{name}</h2>\r\n            </Link>             \r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n      \r\n  );\r\n};\r\n\r\nCampusView.propTypes = {\r\n  Campuses: PropTypes.array.isRequired,\r\n};\r\nexport default CampusView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}