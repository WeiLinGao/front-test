{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Weili\\\\front_starter\\\\src\\\\components\\\\containers\\\\CampusContainer.js\";\n/*==================================================\r\nCampusContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\nimport Header from './Header';\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchCampusThunk } from \"../../store/thunks\";\nimport { deleteCampusThunk } from \"../../store/thunks\";\nimport { addCampusThunk } from \"../../store/thunks\";\nimport { editCampusThunk } from \"../../store/thunks\";\nimport { CampusView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CampusContainer extends Component {\n  // Get the specific campus data from back-end database\n  componentDidMount() {\n    // Get campus ID from URL (API link)\n    this.props.fetchCampus(this.props.match.params.id);\n  }\n\n  // Render a Campus view by passing campus data as props to the corresponding View component\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CampusView, {\n        campus: this.props.campus,\n        allCampuses: this.props.allCampuses,\n        deleteCampus: this.props.deleteCampus,\n        addCampus: this.props.addCampus,\n        editCampus: this.props.editCampus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// The following 2 input arguments are passed to the \"connect\" function used by \"CampusContainer\" component to connect to Redux Store.\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"campus\".\nconst mapState = state => {\n  return {\n    campus: state.campus // Get the State object from Reducer \"campus\"\n  };\n};\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = dispatch => {\n  return {\n    fetchCampus: id => dispatch(fetchCampusThunk(id)),\n    deleteCampus: campusId => dispatch(deleteCampusThunk(campusId)),\n    addCampus: campusId => dispatch(addCampusThunk(campusId)),\n    editCampus: campusId => dispatch(editCampusThunk(campusId)),\n    fetchCampus: campusId => dispatch(fetchCampusThunk(campusId))\n  };\n};\n\n// Export store-connected container by default\n// CampusContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(mapState, mapDispatch)(CampusContainer);","map":{"version":3,"names":["Header","React","Component","connect","fetchCampusThunk","deleteCampusThunk","addCampusThunk","editCampusThunk","CampusView","jsxDEV","_jsxDEV","CampusContainer","componentDidMount","props","fetchCampus","match","params","id","render","children","fileName","_jsxFileName","lineNumber","columnNumber","campus","allCampuses","deleteCampus","addCampus","editCampus","mapState","state","mapDispatch","dispatch","campusId"],"sources":["C:/Users/Weili/front_starter/src/components/containers/CampusContainer.js"],"sourcesContent":["/*==================================================\r\nCampusContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\r\nimport Header from './Header';\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCampusThunk } from \"../../store/thunks\";\r\nimport { deleteCampusThunk } from \"../../store/thunks\";\r\nimport { addCampusThunk} from \"../../store/thunks\";\r\nimport { editCampusThunk} from \"../../store/thunks\";\r\nimport { CampusView } from \"../views\";\r\n\r\nclass CampusContainer extends Component {\r\n  // Get the specific campus data from back-end database\r\n  componentDidMount() {\r\n    // Get campus ID from URL (API link)\r\n    this.props.fetchCampus(this.props.match.params.id);\r\n  }\r\n\r\n  // Render a Campus view by passing campus data as props to the corresponding View component\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <CampusView campus={this.props.campus}\r\n        allCampuses={this.props.allCampuses}\r\n        deleteCampus={this.props.deleteCampus}\r\n        addCampus={this.props.addCampus}\r\n        editCampus={this.props.editCampus}\r\n      />\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// The following 2 input arguments are passed to the \"connect\" function used by \"CampusContainer\" component to connect to Redux Store.\r\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\r\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"campus\".\r\nconst mapState = (state) => {\r\n  return {\r\n    campus: state.campus,  // Get the State object from Reducer \"campus\"\r\n  };\r\n};\r\n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\r\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    fetchCampus: (id) => dispatch(fetchCampusThunk(id)),\r\n    deleteCampus: (campusId) => dispatch(deleteCampusThunk(campusId)),\r\n    addCampus: (campusId) => dispatch(addCampusThunk(campusId)),\r\n    editCampus: (campusId) => dispatch(editCampusThunk(campusId)),\r\n    fetchCampus: (campusId) => dispatch(fetchCampusThunk(campusId))\r\n  };\r\n};\r\n\r\n// Export store-connected container by default\r\n// CampusContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \r\n// (and re-read the values when the Store State updates).\r\nexport default connect(mapState, mapDispatch)(CampusContainer);"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,iBAAiB,QAAQ,oBAAoB;AACtD,SAASC,cAAc,QAAO,oBAAoB;AAClD,SAASC,eAAe,QAAO,oBAAoB;AACnD,SAASC,UAAU,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,eAAe,SAAST,SAAS,CAAC;EACtC;EACAU,iBAAiBA,CAAA,EAAG;IAClB;IACA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,IAAI,CAACD,KAAK,CAACE,KAAK,CAACC,MAAM,CAACC,EAAE,CAAC;EACpD;;EAEA;EACAC,MAAMA,CAAA,EAAG;IACP,oBACER,OAAA;MAAAS,QAAA,gBACET,OAAA,CAACV,MAAM;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVb,OAAA,CAACF,UAAU;QAACgB,MAAM,EAAE,IAAI,CAACX,KAAK,CAACW,MAAO;QACtCC,WAAW,EAAE,IAAI,CAACZ,KAAK,CAACY,WAAY;QACpCC,YAAY,EAAE,IAAI,CAACb,KAAK,CAACa,YAAa;QACtCC,SAAS,EAAE,IAAI,CAACd,KAAK,CAACc,SAAU;QAChCC,UAAU,EAAE,IAAI,CAACf,KAAK,CAACe;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEG,CAAC;EAEV;AACF;;AAEA;AACA;AACA;AACA,MAAMM,QAAQ,GAAIC,KAAK,IAAK;EAC1B,OAAO;IACLN,MAAM,EAAEM,KAAK,CAACN,MAAM,CAAG;EACzB,CAAC;AACH,CAAC;AACD;AACA;AACA,MAAMO,WAAW,GAAIC,QAAQ,IAAK;EAChC,OAAO;IACLlB,WAAW,EAAGG,EAAE,IAAKe,QAAQ,CAAC5B,gBAAgB,CAACa,EAAE,CAAC,CAAC;IACnDS,YAAY,EAAGO,QAAQ,IAAKD,QAAQ,CAAC3B,iBAAiB,CAAC4B,QAAQ,CAAC,CAAC;IACjEN,SAAS,EAAGM,QAAQ,IAAKD,QAAQ,CAAC1B,cAAc,CAAC2B,QAAQ,CAAC,CAAC;IAC3DL,UAAU,EAAGK,QAAQ,IAAKD,QAAQ,CAACzB,eAAe,CAAC0B,QAAQ,CAAC,CAAC;IAC7DnB,WAAW,EAAGmB,QAAQ,IAAKD,QAAQ,CAAC5B,gBAAgB,CAAC6B,QAAQ,CAAC;EAChE,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA,eAAe9B,OAAO,CAAC0B,QAAQ,EAAEE,WAAW,CAAC,CAACpB,eAAe,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}