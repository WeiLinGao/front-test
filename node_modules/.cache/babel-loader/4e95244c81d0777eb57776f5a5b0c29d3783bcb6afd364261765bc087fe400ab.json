{"ast":null,"code":"/*==================================================\r\n/src/store/reducers/campus.js\r\n\r\nThis is a Reducer function that accepts 2 parameters: the previous state object (aka current state) and an action object. \r\nDepending on the Action object, the Reducer updates the State and return the new State object.\r\nIt also defines the State and its default initial value.\r\n================================================== */\nimport { FETCH_CAMPUS, ADD_CAMPUS, DELETE_CAMPUS, EDIT_CAMPUS } from \"../actions/actionTypes\";\nconst initialState = {\n  students: [] // Empty students array\n};\n\nconst campus = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_CAMPUS:\n      return action.payload;\n    case ADD_CAMPUS:\n      return [...state.students, action.payload];\n    case DELETE_CAMPUS:\n      return {\n        ...state,\n        students: state.students.filter(campus => campus.id !== action.payload)\n      };\n    case EDIT_CAMPUS:\n      return {\n        ...state,\n        students: state.students.map(campus => {\n          return campus.id === action.payload.id ? action.payload : campus;\n        })\n      };\n    default:\n      // If the Reducer doesn't recognize the Action Type, returns the previous (current) State unchanged.\n      return state;\n  }\n};\nexport default campus;","map":{"version":3,"names":["FETCH_CAMPUS","ADD_CAMPUS","DELETE_CAMPUS","EDIT_CAMPUS","initialState","students","campus","state","action","type","payload","filter","id","map"],"sources":["C:/Users/Weili/front_starter/src/store/reducers/campus.js"],"sourcesContent":["/*==================================================\r\n/src/store/reducers/campus.js\r\n\r\nThis is a Reducer function that accepts 2 parameters: the previous state object (aka current state) and an action object. \r\nDepending on the Action object, the Reducer updates the State and return the new State object.\r\nIt also defines the State and its default initial value.\r\n================================================== */\r\nimport { FETCH_CAMPUS, ADD_CAMPUS, DELETE_CAMPUS, EDIT_CAMPUS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  students: [], // Empty students array\r\n};\r\n\r\nconst campus = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CAMPUS:\r\n      return action.payload;\r\n    case ADD_CAMPUS:\r\n      return [...state.students, action.payload];\r\n    case DELETE_CAMPUS:\r\n      return {\r\n        ...state,\r\n        students: state.students.filter(campus => campus.id !== action.payload)\r\n      };\r\n    case EDIT_CAMPUS:\r\n      return {\r\n        ...state,\r\n        students: state.students.map(campus => {\r\n          return campus.id === action.payload.id ? action.payload : campus;\r\n        })\r\n      };\r\n    default:\r\n      // If the Reducer doesn't recognize the Action Type, returns the previous (current) State unchanged.\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default campus;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAY,EAAEC,UAAU,EAAEC,aAAa,EAAEC,WAAW,QAAQ,wBAAwB;AAE7F,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE,CAAE;AAChB,CAAC;;AAED,MAAMC,MAAM,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EAC/C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKT,YAAY;MACf,OAAOQ,MAAM,CAACE,OAAO;IACvB,KAAKT,UAAU;MACb,OAAO,CAAC,GAAGM,KAAK,CAACF,QAAQ,EAAEG,MAAM,CAACE,OAAO,CAAC;IAC5C,KAAKR,aAAa;MAChB,OAAO;QACL,GAAGK,KAAK;QACRF,QAAQ,EAAEE,KAAK,CAACF,QAAQ,CAACM,MAAM,CAACL,MAAM,IAAIA,MAAM,CAACM,EAAE,KAAKJ,MAAM,CAACE,OAAO;MACxE,CAAC;IACH,KAAKP,WAAW;MACd,OAAO;QACL,GAAGI,KAAK;QACRF,QAAQ,EAAEE,KAAK,CAACF,QAAQ,CAACQ,GAAG,CAACP,MAAM,IAAI;UACrC,OAAOA,MAAM,CAACM,EAAE,KAAKJ,MAAM,CAACE,OAAO,CAACE,EAAE,GAAGJ,MAAM,CAACE,OAAO,GAAGJ,MAAM;QAClE,CAAC;MACH,CAAC;IACH;MACE;MACA,OAAOC,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}