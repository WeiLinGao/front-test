{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Weili\\\\front_starter\\\\src\\\\components\\\\EditCampus.js\",\n  _s = $RefreshSig$();\n// EditCampus.js\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CampusView from './CampusView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditCampus = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the campus ID from the URL\n  const [campusData, setCampusData] = useState({});\n\n  // Fetch campus data based on the ID\n  useEffect(() => {\n    // Fetch data from your backend API to populate the form\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`/api/campus/${id}`); // Replace with your backend endpoint\n        if (response.ok) {\n          const data = await response.json();\n          setCampusData(data);\n        }\n      } catch (error) {\n        console.error('Error fetching campus data:', error);\n      }\n    };\n    fetchData();\n  }, [id]);\n  const handleSubmit = async updatedData => {\n    try {\n      const response = await fetch(`/api/campus/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedData)\n      });\n      if (response.ok) {\n        // Handle success, redirect to CampusView or perform any other actions\n      }\n    } catch (error) {\n      console.error('Error updating campus data:', error);\n    }\n  };\n\n  // Render the form to edit campus information\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Campus Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(EditCampus, \"noBsntez991U7syIiGVAUgDvmSk=\", false, function () {\n  return [useParams];\n});\n_c = EditCampus;\nexport default EditCampus;\nvar _c;\n$RefreshReg$(_c, \"EditCampus\");","map":{"version":3,"names":["React","useState","useEffect","useParams","CampusView","jsxDEV","_jsxDEV","EditCampus","_s","id","campusData","setCampusData","fetchData","response","fetch","ok","data","json","error","console","handleSubmit","updatedData","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Weili/front_starter/src/components/EditCampus.js"],"sourcesContent":["// EditCampus.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport CampusView from './CampusView';\r\nconst EditCampus = () => {\r\n  const { id } = useParams(); // Get the campus ID from the URL\r\n  const [campusData, setCampusData] = useState({});\r\n  \r\n  // Fetch campus data based on the ID\r\n  useEffect(() => {\r\n    // Fetch data from your backend API to populate the form\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(`/api/campus/${id}`); // Replace with your backend endpoint\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setCampusData(data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching campus data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (updatedData) => {\r\n    try {\r\n      const response = await fetch(`/api/campus/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updatedData),\r\n      });\r\n      if (response.ok) {\r\n        // Handle success, redirect to CampusView or perform any other actions\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating campus data:', error);\r\n    }\r\n  };\r\n\r\n  // Render the form to edit campus information\r\n  return (\r\n    <div>\r\n      <h1>Edit Campus Information</h1>\r\n      {/* Create your form using campusData and handleSubmit function */}\r\n      {/* For example: */}\r\n      {/* <form onSubmit={handleSubmit}>\r\n        Your form inputs here...\r\n        <button type=\"submit\">Save Changes</button>\r\n      </form> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditCampus;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAcL,EAAG,EAAC,CAAC,CAAC,CAAC;QACnD,IAAII,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCN,aAAa,CAACK,IAAI,CAAC;QACrB;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,MAAMW,YAAY,GAAG,MAAOC,WAAW,IAAK;IAC1C,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAcL,EAAG,EAAC,EAAE;QAChDa,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW;MAClC,CAAC,CAAC;MACF,IAAIR,QAAQ,CAACE,EAAE,EAAE;QACf;MAAA;IAEJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;;EAED;EACA,oBACEZ,OAAA;IAAAqB,QAAA,eACErB,OAAA;MAAAqB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAO7B,CAAC;AAEV,CAAC;AAACvB,EAAA,CAnDID,UAAU;EAAA,QACCJ,SAAS;AAAA;AAAA6B,EAAA,GADpBzB,UAAU;AAqDhB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}