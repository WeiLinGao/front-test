{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Weili\\\\front_starter\\\\src\\\\components\\\\containers\\\\EditCampusContainer.js\";\n/*==================================================\r\nNewStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditCampus from '../views/EditCampus';\nimport { editCampusThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EditCampusContainer extends Component {\n  // Initialize state\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let campus = {\n        name: this.state.name,\n        address: this.state.address,\n        description: this.state.description\n      };\n      let newCampus = await this.props.editCampus(campus);\n      if (newCampus && newCampus.id) {\n        this.setState({\n          name: \"\",\n          address: \"\",\n          description: null,\n          redirect: true,\n          redirectId: newCampus.id\n        });\n      } else {\n        console.error(\"Error: Campus ID not found in the response\");\n      }\n    };\n    this.state = {\n      name: \"\",\n      address: \"\",\n      description: null,\n      redirect: false,\n      redirectId: null\n    };\n  }\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/campus/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditCampus, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapDispatch = dispatch => {\n  return {\n    editCampus: campus => dispatch(editCampusThunk(campus))\n  };\n};\nexport default connect(null, mapDispatch)(EditCampusContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","EditCampus","editCampusThunk","jsxDEV","_jsxDEV","EditCampusContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","campus","state","address","description","newCampus","editCampus","id","redirect","redirectId","console","error","componentWillUnmount","render","to","fileName","_jsxFileName","lineNumber","columnNumber","children","mapDispatch","dispatch"],"sources":["C:/Users/Weili/front_starter/src/components/containers/EditCampusContainer.js"],"sourcesContent":["/*==================================================\r\nNewStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\r\nimport Header from './Header';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport EditCampus from '../views/EditCampus';\r\nimport { editCampusThunk } from '../../store/thunks';\r\n\r\nclass EditCampusContainer extends Component {\r\n  // Initialize state\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      name: \"\", \r\n      address: \"\", \r\n      description: null, \r\n      redirect: false, \r\n      redirectId: null\r\n    };\r\n\r\n\r\n  }\r\n\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n  handleSubmit = async event => {\r\n    event.preventDefault();  \r\n\r\n    let campus = {\r\n      name: this.state.name,\r\n      address: this.state.address,\r\n      description: this.state.description\r\n  };\r\n  \r\n \r\n  let newCampus = await this.props.editCampus(campus);\r\n\r\n\r\n  if (newCampus && newCampus.id) {\r\n    this.setState({\r\n      name: \"\", \r\n      address: \"\", \r\n      description: null, \r\n      redirect: true, \r\n      redirectId: newCampus.id\r\n    });\r\n  } else {\r\n \r\n    console.error(\"Error: Campus ID not found in the response\");\r\n   \r\n  }\r\n}\r\n\r\n  \r\n  componentWillUnmount() {\r\n      this.setState({redirect: false, redirectId: null});\r\n  }\r\n\r\n\r\n  render() {\r\n   \r\n    if(this.state.redirect) {\r\n      return (<Redirect to={`/campus/${this.state.redirectId}`}/>)\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <EditCampus \r\n          handleChange = {this.handleChange} \r\n          handleSubmit={this.handleSubmit}\r\n        \r\n        />\r\n      </div>          \r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return({\r\n        editCampus: (campus) => dispatch(editCampusThunk(campus))\r\n    })\r\n}\r\n\r\nexport default connect(null, mapDispatch)(EditCampusContainer);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}