{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Weili\\\\front_starter\\\\src\\\\components\\\\containers\\\\EditCampusContainer.js\";\n/*==================================================\r\nNewStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport EditCampus from '../views/EditCampus';\nimport { editCampusThunk } from '../../store/thunks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EditCampusContainer extends Component {\n  // Initialize state\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        name,\n        address,\n        description,\n        imageUrl\n      } = this.state;\n      const updatedCampus = {\n        id: this.props.campusId,\n        name,\n        address,\n        description,\n        imageUrl\n      };\n\n      // Dispatch the action\n      this.props.editCampus(updatedCampus);\n      let campus = {\n        name: this.state.name,\n        address: this.state.address,\n        description: this.state.description,\n        imageUrl: this.state.imageUrl\n      };\n      try {\n        let newCampus = await this.props.editCampus(campus);\n        if (newCampus && newCampus.id) {\n          this.setState({\n            name: \"\",\n            address: \"\",\n            description: null,\n            redirect: true,\n            redirectId: newCampus.id\n          });\n        } else {\n          console.error(\"Error: Campus ID not found in the response\");\n        }\n      } catch (error) {\n        console.error(\"Error editing campus:\", error);\n      }\n    };\n    this.state = {\n      name: \"\",\n      address: \"\",\n      description: null,\n      redirect: false,\n      redirectId: null\n    };\n  }\n  componentWillUnmount() {\n    this.setState({\n      redirect: false,\n      redirectId: null\n    });\n  }\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/campus/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditCampus, {\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit,\n        name: this.state.name,\n        address: this.state.address,\n        description: this.state.description,\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapDispatch = dispatch => {\n  return {\n    editCampus: updatedCampus => dispatch(editCampusThunk(updatedCampus))\n  };\n};\nexport default connect(null, mapDispatch)(EditCampusContainer);","map":{"version":3,"names":["Header","Component","connect","Redirect","EditCampus","editCampusThunk","jsxDEV","_jsxDEV","EditCampusContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","address","description","imageUrl","state","updatedCampus","id","campusId","editCampus","campus","newCampus","redirect","redirectId","console","error","componentWillUnmount","render","to","fileName","_jsxFileName","lineNumber","columnNumber","children","mapDispatch","dispatch"],"sources":["C:/Users/Weili/front_starter/src/components/containers/EditCampusContainer.js"],"sourcesContent":["/*==================================================\r\nNewStudentContainer.js\r\n\r\nThe Container component is responsible for stateful logic and data fetching, and\r\npasses data (if any) as props to the corresponding View component.\r\nIf needed, it also defines the component's \"connect\" function.\r\n================================================== */\r\nimport Header from './Header';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport EditCampus from '../views/EditCampus';\r\nimport { editCampusThunk } from '../../store/thunks';\r\n\r\nclass EditCampusContainer extends Component {\r\n  // Initialize state\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      name: \"\", \r\n      address: \"\", \r\n      description: null, \r\n      redirect: false, \r\n      redirectId: null\r\n    };\r\n\r\n\r\n  }\r\n\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const { name, address, description, imageUrl } = this.state;\r\n    const updatedCampus = { id: this.props.campusId, name, address, description, imageUrl };\r\n    \r\n    // Dispatch the action\r\n    this.props.editCampus(updatedCampus);\r\n    let campus = {\r\n      name: this.state.name,\r\n      address: this.state.address,\r\n      description: this.state.description,\r\n      imageUrl: this.state.imageUrl\r\n  };\r\n  \r\n  try {\r\n    let newCampus = await this.props.editCampus(campus);\r\n\r\n    if (newCampus && newCampus.id) {\r\n      this.setState({\r\n        name: \"\",\r\n        address: \"\",\r\n        description: null,\r\n        redirect: true,\r\n        redirectId: newCampus.id,\r\n      });\r\n    } else {\r\n      console.error(\"Error: Campus ID not found in the response\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error editing campus:\", error);\r\n  }\r\n};\r\n  \r\n  componentWillUnmount() {\r\n      this.setState({redirect: false, redirectId: null});\r\n  }\r\n\r\n\r\n  render() {\r\n   \r\n    if(this.state.redirect) {\r\n      return (<Redirect to={`/campus/${this.state.redirectId}`}/>)\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <EditCampus \r\n          handleChange = {this.handleChange} \r\n          handleSubmit={this.handleSubmit}\r\n          name={this.state.name}\r\n          address={this.state.address}\r\n          description={this.state.description}\r\n          imageUrl={this.state.imageUrl}\r\n        />\r\n      </div>          \r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatch = (dispatch) => {\r\n    return({\r\n      editCampus: (updatedCampus) => dispatch(editCampusThunk(updatedCampus)),\r\n    })\r\n}\r\n\r\nexport default connect(null, mapDispatch)(EditCampusContainer);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}